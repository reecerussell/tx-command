name: Publish

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.x'

      - name: Build
        run: ./scripts/build.sh

      - name: Upload Artifacts
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        uses: actions/upload-artifact@v2
        with:
          name: nuget
          path: packages/*.nupkg

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.x'

      - name: Pull Database Images
        run: |
          docker pull mcr.microsoft.com/mssql/server:2019-latest
          docker pull mysql:8.0.23

      - name: Test
        run: ./scripts/test.sh

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          files: >
            ./Coverage/TxCommand.Net5.Tests/coverage.cobertura.xml,
            ./Coverage/TxCommand.NetCore3_1.Tests/coverage.cobertura.xml,
            ./Sql/Coverage/TxCommand.Sql.Net5.Tests/coverage.cobertura.xml,
            ./Sql/Coverage/TxCommand.Sql.NetCore3_1.Tests/coverage.cobertura.xml

  publish:
    name: Publish
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: nuget
          path: packages/

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - name: Publish TxCommand
        run: dotnet nuget push packages/TxCommand.*.*.*.nupkg --api-key ${{secrets.NUGET_API_KEY}} --source https://www.nuget.org/api/v2/package --skip-duplicate

      - name: Publish TxCommand.Abstractions
        run: dotnet nuget push packages/TxCommand.Abstractions.*.*.*.nupkg --api-key ${{secrets.NUGET_API_KEY}} --source https://www.nuget.org/api/v2/package --skip-duplicate

      - name: Publish TxCommand
        run: dotnet nuget push packages/TxCommand.Sql.*.*.*.nupkg --api-key ${{secrets.NUGET_API_KEY}} --source https://www.nuget.org/api/v2/package --skip-duplicate

      - name: Publish TxCommand.Abstractions
        run: dotnet nuget push packages/TxCommand.Sql.Abstractions.*.*.*.nupkg --api-key ${{secrets.NUGET_API_KEY}} --source https://www.nuget.org/api/v2/package --skip-duplicate
